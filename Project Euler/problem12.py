'The sequence of triangle numbers is generated by adding the natural numbers.'
'So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:'

'1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...'

'Let us list the factors of the first seven triangle numbers:'

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28

'We can see that 28 is the first triangle number to have over five divisors.'

'What is the value of the first triangle number to have over five hundred divisors?'

# Nikhil Jain
# 7/2/17
# Go Bears!

import math

# finds number of divisors for a given number
# iterate from 1 to sqrt num
# if that num divides into num, increment divisor count by 2
# since we are only searching for half the divisors
def divisors(num):

	divisors = 0

	for x in range(1, int(math.floor(math.sqrt(num) + 1))):
		if num % x == 0:
			divisors += 2

	return divisors


def main():

	current_num = 1
	count = 2

	while divisors(current_num) < 500:
		current_num += count	# generate next triangle number
		count += 1 				# increment count
		print str(current_num) + ', ' + str(divisors(current_num))

	if divisors(current_num >= 500):
		print "FINISHED: " + str(current_num) + ', ' + str(divisors(current_num))

# start program
main()